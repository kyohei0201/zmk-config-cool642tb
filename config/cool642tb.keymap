#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
            layers = <2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R             &kp T                                                  &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A             &kp S         &kp D         &kp F             &kp G           &none                 &kp UNDERSCORE   &kp H        &kp J  &kp K      &kp L       &kp PLUS
&kp Z             &kp X         &kp C         &kp V             &kp B           &none                 &kp LG(INT_YEN)  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &lt 3 LANGUAGE_2  &lt 2 LEFT_GUI  &mt LEFT_SHIFT SPACE  &kp SPACE        &lt 1 LANG1                                &mkp MB1
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM_ALLOW {
            bindings = <
&kp TAB         &kp N7  &kp N8  &kp N9  &kp PLUS                      &kp HOME   &kp PAGE_UP     &kp UP_ARROW      &kp PAGE_DOWN      &bt BT_SEL 0
&kp N0          &kp N4  &kp N5  &kp N6  &kp ASTERISK  &none   &none   &kp END    &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW    &bt BT_SEL 1
&kp LEFT_SHIFT  &kp N1  &kp N2  &kp N3  &kp EQUAL     &none   &none   &kp ENTER  &kp BACKSPACE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &bt BT_SEL 2
&trans          &trans  &trans  &trans  &trans        &trans  &trans  &trans                                                          &bt BT_SEL 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        FUNCTION_MOUSE {
            bindings = <
&none   &kp F7   &kp F8  &kp F9  &kp F11                  &none   &none     &msc SCRL_UP    &none     &none
&none   &kp F4   &kp F5  &kp F6  &kp F10  &none   &none   &none   &mkp MB1  &msc SCRL_DOWN  &mkp MB2  &none
&none   &kp F12  &kp F2  &kp F3  &none    &none   &none   &none   &none     &none           &none     &none
&trans  &trans   &trans  &trans  &trans   &trans  &trans  &trans                                      &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&kp Q       &kp W    &kp E             &kp R         &kp T                            &kp Y          &kp U     &msc SCRL_UP    &kp O     &kp P
&kp A       &kp S    &kp D             &kp F         &kp G     &kp N1    &kp N2       &kp H          &mkp MB1  &msc SCRL_DOWN  &mkp MB2  &kp ENTER
&kp Z       &kp X    &kp C             &kp V         &kp B     &kp N3    &kp N4       &kp N          &kp M     &mkp MB1        &mkp MB2  &kp SLASH
&kp ESCAPE  &kp TAB  &kp LEFT_CONTROL  &kp LEFT_GUI  &mkp MB1  &mkp MB2  &lt 2 SPACE  &kp BACKSPACE                                      &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_6 {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
